# Generated by Django 4.1.7 on 2024-11-06 12:01

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        ('tentaculus', '0003_alter_spell_material_component'),
    ]

    operations = [
        migrations.CreateModel(
            name='Source',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('polymorphic_ctype', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_%(app_label)s.%(class)s_set+', to='contenttypes.contenttype')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
        ),
        migrations.RemoveField(
            model_name='spell',
            name='class_race',
        ),
        migrations.AddField(
            model_name='card',
            name='is_face_side',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='school',
            name='priority',
            field=models.IntegerField(default=1),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='spell',
            name='components',
            field=models.TextField(choices=[('В', 'В'), ('С', 'С'), ('М', 'М'), ('В, С', 'В, С'), ('В, М', 'В, М'), ('С, М', 'С, М'), ('В, С, М', 'В, С, М')]),
        ),
        migrations.CreateModel(
            name='DndClass',
            fields=[
                ('source_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='tentaculus.source')),
                ('style', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('tentaculus.source',),
        ),
        migrations.CreateModel(
            name='Race',
            fields=[
                ('source_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='tentaculus.source')),
                ('style', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('tentaculus.source',),
        ),
        migrations.CreateModel(
            name='SubClass',
            fields=[
                ('source_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='tentaculus.source')),
                ('base_class', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subclasses', to='tentaculus.dndclass')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('tentaculus.source',),
        ),
        migrations.CreateModel(
            name='SubRace',
            fields=[
                ('source_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='tentaculus.source')),
                ('base_race', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subraces', to='tentaculus.race')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('tentaculus.source',),
        ),
        migrations.DeleteModel(
            name='ClassRace',
        ),
    ]
